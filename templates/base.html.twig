<!DOCTYPE html>
<html lang="fr">
	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
		<link rel="icon" type="image/png" href="{{ asset('build/images/favicon.png') }}"/>
		<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA0VALOkkyok0cB-7WO23wZuyuE8QrzEEc&libraries=places&callback=initAutocomplete" async="" defer=""></script>
		<title>
			{% block title %}Projet 3 Name
			{% endblock %}
		</title>
		{# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
		{% block stylesheets %}
			{{ encore_entry_link_tags('app') }}
		{% endblock %}

		{% block javascripts %}
			{{ encore_entry_script_tags('app') }}
		{% endblock %}

		<!---------FONTS------->
		<link href="https://fonts.cdnfonts.com/css/slicker" rel="stylesheet">

		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link
		href="https://fonts.googleapis.com/css2?family=Pathway+Extreme:wght@300&display=swap" rel="stylesheet">

	<!---------END OF FONTS-------->
	</head>
	<body>
		{# read and display just one flash message type #}
		{% for message in app.flashes('notice') %}
			<div class="flash-notice">
				{{ message }}
			</div>
		{% endfor %}
		{% include 'modules/_navbar.html.twig' %}

		{% block body %}{% endblock %}

		{% include 'modules/footer.html.twig' %}

        <script>
            // wishlist ajax

            function addToWishlist(e)
            {
                e.preventDefault();
                const wishlistLink = e.currentTarget;
                const link = wishlistLink.href;

                // Send an HTTP request with fetch to the URI defined in the href
                try {
                    fetch(link)

                        // Extract the JSON from the response
                        .then(res => res.json())

                        // Then update the icon
                        .then(data => {
                            const wishlistIcon = wishlistLink.firstElementChild;
                            if (data.isLiked) {
                                wishlistIcon.classList.remove("bi-heart"); // Remove the .bi-heart (empty heart) from classes in <i> element
                                wishlistIcon.classList.add("bi-heart-fill"); // Add the .bi-heart-fill (full heart) from classes in <i> element
                            } else {
                                wishlistIcon.classList.remove("bi-heart-fill"); // Remove the .bi-heart-fill (full heart) from classes in <i> element
                                wishlistIcon.classList.add("bi-heart"); // Add the .bi-heart (empty heart) from classes in <i> element
                            }
                        });
                } catch (err) {
                    // eslint-disable-next-line no-console
                    console.error(err);
                }
            }
            // wishlist ajax

            function startSequence(e)
            {
                e.preventDefault();
                const wishlistLink = e.currentTarget;
                const link = wishlistLink.href;

                // Send an HTTP request with fetch to the URI defined in the href
                try {
                    fetch(link)
                        // Extract the JSON from the response
                        .then(res => res.json())

                        // Then update the icon
                        .then(data => {
                            console.log(data);
                            const sequenceContainer = document.getElementById('sequenceContainer');
                            if (data.isStarted) {
                                sequenceContainer.style.display = 'flex';
                            }
                        });
                } catch (err) {
                    // eslint-disable-next-line no-console
                    console.error(err);
                }
            }
        </script>
	</body>
</html>
